# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wp_DFoUKHzNSMf9fsk8nKbppgwdoOffp
"""

import streamlit as st
import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestRegressor
from sklearn.preprocessing import KBinsDiscretizer
from sklearn.metrics import r2_score, mean_squared_error

# Load the pre-trained model (assuming you have saved it using joblib or pickle)
import joblib

# Title of the application
st.title("Environmental Prediction App")
st.write("This application predicts Temperature (T) and Relative Humidity (rh) based on input features.")

# Sidebar for user input
st.sidebar.header("Input Features")
def user_input_features():
    hour = st.sidebar.slider("Hour", 0, 23, 12)
    day = st.sidebar.slider("Day", 1, 31, 15)
    month = st.sidebar.slider("Month", 1, 12, 6)
    weekofyear = st.sidebar.slider("Week of Year", 1, 52, 26)
    T_lag1 = st.sidebar.slider("T (Lag 1)", -50.0, 50.0, 20.0)
    T_lag2 = st.sidebar.slider("T (Lag 2)", -50.0, 50.0, 20.0)
    rh_lag1 = st.sidebar.slider("rh (Lag 1)", 0.0, 100.0, 50.0)
    T_roll_mean = st.sidebar.slider("T (Rolling Mean)", -50.0, 50.0, 20.0)
    rh_roll_mean = st.sidebar.slider("rh (Rolling Mean)", 0.0, 100.0, 50.0)

    data = {
        "hour": hour,
        "day": day,
        "month": month,
        "weekofyear": weekofyear,
        "T_lag1": T_lag1,
        "T_lag2": T_lag2,
        "rh_lag1": rh_lag1,
        "T_roll_mean": T_roll_mean,
        "rh_roll_mean": rh_roll_mean,
    }
    features = pd.DataFrame(data, index=[0])
    return features

input_df = user_input_features()

# Display user inputs
st.subheader("User Input Features")
st.write(input_df)

# Load the pre-trained model
model_rf_T = joblib.load("envipar.joblib")  # Replace with the actual file name
model_rf_rh = joblib.load("envipar1.joblib")    # Replace with the actual file name

# Make predictions
T_prediction = model_rf_T.predict(input_df)
rh_prediction = model_rf_rh.predict(input_df)

# Display predictions
st.subheader("Prediction Results")
st.write(f"Predicted Temperature (T): {T_prediction[0]:.2f} Â°C")
st.write(f"Predicted Relative Humidity (rh): {rh_prediction[0]:.2f} %")

# Plot predictions (Optional)
import matplotlib.pyplot as plt

fig, ax = plt.subplots(figsize=(6, 3))
ax.bar(["Temperature (T)", "Relative Humidity (rh)"], [T_prediction[0], rh_prediction[0]], color=["orange", "blue"])
ax.set_ylabel("Predicted Value")
ax.set_title("Predicted Environmental Factors")
st.pyplot(fig)